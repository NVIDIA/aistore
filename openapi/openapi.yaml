penapi: "3.0.0"
info:
  version: "3.0"
  title: AIS
  description: "AIStore is a scalable object-storage based caching system with Amazon and Google Cloud backends."
  termsOfService: ""
  contact:
    name: "NVIDIA-AIS"
    email: "aisdev@exchange.nvidia.com"
    url: "https://github.com/NVIDIA/aistore"
  license:
    name: MIT
    url: https://github.com/NVIDIA/aistore/blob/master/LICENSE
tags:
  - name: Object
    description: All APIs to interact with AIS objects
    externalDocs:
      url: https://github.com/NVIDIA/aistore
  - name: Bucket
    description: All APIs to interact with AIS buckets
    externalDocs:
      url: https://github.com/NVIDIA/aistore
  - name: Cluster
    description: All APIs to perform operations on the AIS cluster
    externalDocs:
      url: https://github.com/NVIDIA/aistore
  - name: Daemon
    description: All APIs to perform operations on individual AIS daemons
    externalDocs:
      url: https://github.com/NVIDIA/aistore
  - name: Sort
    description: All APIs to interact with dSort operation
    externalDocs:
      url: https://github.com/NVIDIA/aistore/dsort
servers:
  - url: http://localhost:8080/v1
paths:
  /objects/{bucket-name}/{object-name}:
    get:
      summary: Get object
      operationId: getObject
      tags:
        - Object
      parameters:
        - $ref: '#/components/parameters/bucketNameParam'
        - $ref: '#/components/parameters/objectNameParam'
        - name: offset
          in: query
          description: Starting byte from where the read needs to be performed
          schema:
            type: integer
            format: int64
        - name: length
          in: query
          description: Number of bytes that need to be returned starting from the offset
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/providerParam'
        - $ref: '#/components/parameters/namespaceParam'
      responses:
        '200':
          description: Object at the location bucket-name/object-name
          headers:
            ObjCksumType:
              schema:
                type: string
            ObjCksumVal:
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
                format: byte
        '301':
          description: "Permanent HTTP redirect"
          headers:
            Location:
              schema:
                type: string
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Unexpected'
    put:
      summary: Put object
      operationId: putObject
      tags:
        - Object
      parameters:
        - $ref: '#/components/parameters/bucketNameParam'
        - $ref: '#/components/parameters/objectNameParam'
        - $ref: '#/components/parameters/providerParam'
        - $ref: '#/components/parameters/namespaceParam'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Object at the location bucket-name/object-name put successfully
        '307':
          description: "Temporary HTTP redirect"
          headers:
            Location:
              schema:
                type: string
        default:
          $ref: '#/components/responses/Unexpected'
    delete:
      summary: Delete object
      operationId: deleteObject
      tags:
        - Object
      parameters:
        - $ref: '#/components/parameters/bucketNameParam'
        - $ref: '#/components/parameters/objectNameParam'
        - $ref: '#/components/parameters/providerParam'
        - $ref: '#/components/parameters/namespaceParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputParameters'
      responses:
        '200':
          description: Object at the location bucket-name/object-name deleted successfully
        '307':
          description: "Temporary HTTP redirect"
          headers:
            Location:
              schema:
                type: string
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Unexpected'
    post:
      summary: Perform operations on object such as rename
      operationId: performOperationOnObject
      tags:
        - Object
      parameters:
        - $ref: '#/components/parameters/bucketNameParam'
        - $ref: '#/components/parameters/objectNameParam'
        - $ref: '#/components/parameters/providerParam'
        - $ref: '#/components/parameters/namespaceParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputParameters'
      responses:
        '200':
          description: Operation on bucket-name/object-name succeeded
        '307':
          description: "Temporary HTTP redirect"
          headers:
            Location:
              schema:
                type: string
        default:
          $ref: '#/components/responses/Unexpected'
    head:
      summary: Query object properties
      operationId: getObjectProperties
      tags:
        - Object
      parameters:
        - $ref: '#/components/parameters/bucketNameParam'
        - $ref: '#/components/parameters/objectNameParam'
        - name: check_cached
          in: query
          description: Check if the object is cached
          schema:
            type: boolean
        - $ref: '#/components/parameters/providerParam'
        - $ref: '#/components/parameters/namespaceParam'
      responses:
        '200':
          description: Properties of the object at the location bucket-name/object-name
          headers:
            CloudProvider:
              schema:
                type: string
            Size:
              schema:
                type: integer
                format: int32
            Version:
              schema:
                type: string
        '307':
          description: "Temporary HTTP redirect"
          headers:
            Location:
              schema:
                type: string
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Unexpected'
  /buckets/*:
    get:
      summary: Get bucket names
      operationId: listBucketNames
      tags:
        - Bucket
      parameters:
        - name: provider
          in: query
          description: Determines the cloud provider for which we should get defined buckets
          schema:
            type: string
            enum: [ais, aws, gcp, cloud]
          examples:
            all:
              value: null
              summary: Get buckets from all providers
            cloud:
              value: cloud
              summary: Get buckets only for defined cloud provider
            ais:
              value: ais
              summary: Get buckets only defined in cluster that the request refers to
        - $ref: '#/components/parameters/namespaceParam'
      responses:
        '200':
          description: Cloud and local bucket names
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketNames'
        default:
          $ref: '#/components/responses/Unexpected'
  /buckets/{bucket-name}:
    put:
      summary: Set bucket properties
      operationId: setBucketProperties
      tags:
        - Bucket
      parameters:
        - $ref: '#/components/parameters/bucketNameParam'
        - $ref: '#/components/parameters/providerParam'
        - $ref: '#/components/parameters/namespaceParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputParameters'
      responses:
        '200':
          description: Bucket properties set successfully
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Unexpected'
    post:
      summary: Perform operations on bucket such as create
      operationId: performOperationOnBucket
      tags:
        - Bucket
      parameters:
        - $ref: '#/components/parameters/bucketNameParam'
        - $ref: '#/components/parameters/providerParam'
        - $ref: '#/components/parameters/namespaceParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputParameters'
      responses:
        '202':
          description: Asynchronous task is running
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TaskID'
                  - $ref: '#/components/schemas/ObjectPropertyList'
        '200':
          description: Operation on bucket-name succeeded
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TaskID'
                  - $ref: '#/components/schemas/ObjectPropertyList'
        default:
          $ref: '#/components/responses/Unexpected'
    delete:
      summary: Delete operations on bucket and its contained objects
      operationId: deleteBucket
      tags:
        - Bucket
      parameters:
        - $ref: '#/components/parameters/bucketNameParam'
        - $ref: '#/components/parameters/providerParam'
        - $ref: '#/components/parameters/namespaceParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputParameters'
      responses:
        '200':
          description: Bucket-name deleted successfully
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Unexpected'
    head:
      summary: Query bucket properties
      operationId: getBucketProperties
      tags:
        - Bucket
      parameters:
        - $ref: '#/components/parameters/bucketNameParam'
        - $ref: '#/components/parameters/providerParam'
        - $ref: '#/components/parameters/namespaceParam'
      responses:
        '200':
          description: Properties of bucket-name
          headers:
            CloudProvider:
              schema:
                type: string
            Versioning:
              schema:
                type: string
            NextTierURL:
              schema:
                type: string
            ReadPolicy:
              schema:
                type: string
            WritePolicy:
              schema:
                type: string
        '307':
          description: "Temporary HTTP redirect"
          headers:
            Location:
              schema:
                type: string
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Unexpected'
  /cluster/:
    get:
      summary: Get cluster related details
      operationId: getClusterInfo
      tags:
        - Cluster
      parameters:
        - name: what
          in: query
          description: Cluster details which need to be fetched
          required: true
          schema:
            $ref: '#/components/schemas/GetWhat'
        - name: props
          in: query
          description: Additional properties describing the cluster details
          schema:
            $ref: '#/components/schemas/GetProps'
      responses:
        '200':
          description: Requested cluster details
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/SysInfoStats'
                  - $ref: '#/components/schemas/ClusterStatistics'
        default:
          $ref: '#/components/responses/Unexpected'
    put:
      summary: Perform cluster wide operations such as setting config value, shutting down proxy/target etc.
      operationId: performOperationOnCluster
      tags:
        - Cluster
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputParameters'
      responses:
        '200':
          description: Cluster operation triggered successfully
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
  /cluster/register/:
    post:
      summary: Register storage target
      operationId: registerTarget
      tags:
        - Cluster
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snode'
      responses:
        '200':
          description: Target registered successfully
        default:
          $ref: '#/components/responses/Unexpected'
  /cluster/daemon/{daemonId}:
    delete:
      summary: Unregister the storage target
      operationId: unregisterTarget
      tags:
        - Cluster
      parameters:
        - name: daemonId
          in: path
          description: ID of the target daemon
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Storage target unregistered successfully
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Unexpected'
  /cluster/proxy/{primary-proxy-id}:
    put:
      summary: Set primary proxy
      operationId: setPrimaryProxy
      tags:
        - Cluster
      parameters:
        - name: primary-proxy-id
          in: path
          description: ID of the proxy that should be set as primary
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Primary proxy set successfully
        default:
          $ref: '#/components/responses/Unexpected'
  /daemon/:
    get:
      summary: Get daemon related details
      operationId: getDaemonInfo
      tags:
        - Daemon
      parameters:
        - name: what
          in: query
          description: Daemon details which needs to be fetched
          required: true
          schema:
            $ref: '#/components/schemas/GetWhat'
      responses:
        '200':
          description: Requested daemon details
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ClusterMap'
                  - $ref: '#/components/schemas/TargetStatistics'
                  - $ref: '#/components/schemas/DaemonConfiguration'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Unexpected'
    put:
      summary: Perform operations such as setting config value, shutting down proxy/target etc. on a AIS daemon
      operationId: performOperationOnDaemon
      tags:
        - Daemon
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputParameters'
      responses:
        '200':
          description: Operation on AIS daemon triggered successfully
        default:
          $ref: '#/components/responses/Unexpected'
  /daemon/mountpaths:
    post:
      summary: Perform operations on mountpath such as disable and enable
      operationId: modifyMountpath
      tags:
        - Daemon
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputParameters'
      responses:
        '200':
          description: Operation on AIS daemon triggered successfully
        '204':
          description: Return status if the mountpath was already enabled or disabled
        '404':
          description: Return status if the mountpath was not found
        default:
          $ref: '#/components/responses/Unexpected'
    put:
      summary: Create mountpath on target
      operationId: createMountpath
      tags:
        - Daemon
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputParameters'
      responses:
        '200':
          description: Operation on AIS daemon triggered successfully
        default:
          $ref: '#/components/responses/Unexpected'
    delete:
      summary: Remove mountpath from target
      operationId: removeMountpath
      tags:
        - Daemon
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputParameters'
      responses:
        '200':
          description: Operation on AIS daemon triggered successfully
        default:
          $ref: '#/components/responses/Unexpected'
  /sort:
    post:
      summary: Starts distributed sort operation on cluster
      operationId: startSort
      tags:
        - Sort
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SortSpec'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                format: uuid
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
                format: uuid
    get:
      summary: Get metrics of given sort operation
      operationId: getSortMetrics
      tags:
        - Sort
      parameters:
        - name: id
          in: query
          description: Sort uuid which is returned when starting dSort
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapOfMetrics'
        default:
          $ref: '#/components/responses/Unexpected'
  /sort/abort:
    delete:
      summary: Abort distributed sort operation
      operationId: abortSort
      tags:
        - Sort
      parameters:
        - name: id
          in: query
          description: Sort uuid which is returned when starting dSort
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Operation was successfully aborted
        default:
          $ref: '#/components/responses/Unexpected'
  /download:
    delete:
      summary: Cancel a previous download request
      operationId: downloadCancel
      tags:
        - Download
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadAdmin'
      responses:
        '200':
          description: Download cancel request was successfully added to the download manager.
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Download cancel request failed, file already finished downloaded.
          content:
            text/plain:
              schema:
                type: string
        default:
          description: An unexpected error was encountered
          content:
            text/plain:
              schema:
                type: string
    get:
        summary: Get the download status of a previously requested download. 
        operationId: downloadStatus
        tags:
          - Download
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadAdmin'
        responses:
          '200':
            description: Current status and progress if it is currently being downloaded.
            content:
              text/plain:
                schema:
                  type: string
          default:
            $ref: '#/components/responses/Unexpected'
  /download/single:
    post:
      summary: Queues a single object to be downloaded by AIS.
      operationId: downloadSingleObject
      tags:
        - Download
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadSingle'
      responses:
        '200':
          description: Download request was successfully added to download queue.
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Bad request, check formatting and/or fields provided in the request body.
          content:
            text/plain:
              schema:
                type: string
        '409':
          description: Object with the same bucket and objname already exists on AIS.
          content:
            text/plain:
              schema:
                type: string
        default:
          $ref: '#/components/responses/Unexpected'
  /download/multi:
    post:
      summary: Queues multiple objects to be downloaded by AIS. Requires either an object_map or object_list request body field.
      operationId: downloadMultipleObjects
      tags:
        - Download
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadMulti'
      responses:
        '200':
          description: Download request consisting of multiple objects were successfully added to download queue.
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Bad request, check formatting and/or fields provided in the request body.
          content:
            text/plain:
              schema:
                type: string
        '409':
          description: Object with the same bucket and objname already exists on AIS.
          content:
            text/plain:
              schema:
                type: string
        default:
          $ref: '#/components/responses/Unexpected'
  /download/list:
    post:
      summary: Queues for download all the objects that can be constructed from url= base + prefix + n + suffix. Where n is known as the key space. start <= n <= end. The key space can be modified using the step and digit_count modifiers in the request body.
      operationId: downloadObjectList
      tags:
        - Download
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadList'
      responses:
        '200':
          description: Download list request was successfully processed and objects were successfully added to download queue.
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Bad request, check formatting and/or fields provided in the request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Object with the same bucket and objname already exists on AIS.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          $ref: '#/components/responses/Unexpected'

components:
  parameters:
    bucketNameParam:
      name: bucket-name
      in: path
      description: Bucket name
      required: true
      schema:
        type: string
    objectNameParam:
      name: object-name
      in: path
      description: Object name
      required: true
      schema:
        type: string
    providerParam:
      name: provider
      in: query
      description: Determines the cloud provider where a given bucket and object is defined
      schema:
        type: string
        enum: [ais, aws, gcp, cloud]
    namespaceParam:
      name: namespace
      in: query
      description: Unique name of the namespace
      schema:
        type: string
      examples:
        single-namespace:
          value: ns1
          summary: Specify only the name of the namespace
        uuid-and-namespace:
          value: uuid#ns1
          summary: Specify the name of the namespace with UUID to remote cluster that it refers to

  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unexpected:
      description: An unexpected error was encountered
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    # Schema for error response body
    Error:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        method:
          type: string
        url_path:
          type: string
        remote_addr:
          type: string
        trace:
          type: string
      required:
        - status
        - message
        - method
        - url_path
        - remote_addr

    DownloadAdmin:
      type: object
      properties:
        link:
          type: string
          description: URL of the object that was added to the download queue
          example: "http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz"
        bucket:
          type: string
          description: bucket where the download was supposed to be saved to
          example: "testbucket"
        objname:
          type: string
          description: name of the object the download was supposed to be saved as
          example: "dataset.gz"
      required:
        - bucket
        - link
        - objname
    DownloadSingle:
      type: object
      properties:
        link:
          type: string
          description: URL of where the object will be downloaded from.
          example: "http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz"
        bucket:
          type: string
          description: bucket where the download will be saved to
          example: "testbucket"
        objname:
          type: string
          description: name of the object the download will be saved as. If no objname is provided, then the objname will be the last element in the URL's path.
          example: "dataset.gz"
        headers:
          type: object
          description: JSON object where the key is a header name and the value is the corresponding header value (string). These values are used as the header values for when AIS actually makes the GET request to download the object from the link.
      required:
        - bucket
        - link
    DownloadList:
      type: object
      properties:
        bucket:
          type: string
          description: Bucket where the downloaded objects will be saved to.
          example: "testbucket"
        headers:
          type: object
          description: JSON object where the key is a header name and the value is the corresponding header value (string). These values are used as the header values for when AIS actually makes the GET request to download each object.
        base:
          type: string
          description: The base URL of the object that will be used to formulate the download url
          example: "http://yann.lecun.com/exdb/mnist/"
        prefix:
          type: string
          description: Is the first thing appended to the base string to formulate the download url
          example: "train-images-idx"
        suffix:
          type: string
          description: the suffix follows the object index to formulate the download url of the object being downloaded.
          example: "-ubyte.gz"
        start:
          type: integer
          description: The index of the first object in the object space to be downloaded. Default is 0 if not provided.
          example: "5"
          minimum: 0
        end:
          type: integer
          description: The upper bound of the range of objects to be downloaded in the object space. Default is 0 if not provided.
          example: "75"
          minimum: 0
        step:
          type: integer
          description: Used to download every nth object (where n = step) in the object space starting from start and ending at end. Default is 1 if not provided.
          example: "5"
          minimum: 1
        digit_count:
          type: integer
          description: Used to ensure that each key coforms to n digits (where n = digit_count). Basically prepends as many 0s as needed. i.e. if n == 4, then the key 45 will be 0045 and if n == 5, then key 45 wil be 00045. Not providing this field will mean no 0s are prepended to any index in the key space.
          example: "4"
          minimum: 0
      required:
        - bucket
        - base  
    DownloadMulti:
      type: object
      properties:
        bucket:
          type: string
          description: Bucket where the downloaded objects will be saved to.
          example: "testbucket"
        headers:
          type: object
          description: JSON object where the key is a header name and the value is the corresponding header value(string). These values are used as the header values for when AIS actually makes the GET request to download the object.
        object_map:
          type: object
          description: JSON object where the key (string) is the objname the object will be saved as and value (string) is a URL pointing to some file.
        object_list:
          type: array
          description: JSON array where each item is a URL (string) pointing to some file. The objname for each file will be the last element in the URL's path. 
          items:
            type: string
            example: http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz
          minItems: 1
      required:
        - bucket
    SortSpec:
      type: object
      properties:
        bucket:
          type: string
          description: Name of the source bucket which data is read from
          example: "dSort-bucket"
        output_bucket:
          type: string
          description: Name of the bucket where data is written/saved. By default it is same as bucket.
        provider:
          type: string
          description: Describes if the bucket is local or cloud
          default: "ais"
        output_provider:
          type: string
          description: Describes if the output bucket is local or cloud
          default: "ais"
        extension:
          type: string
          example: ".tar"
        output_shard_size:
          type: string
          example: "10KB"
          description: Size (in bytes) of the output shard, can be in form of raw numbers `10240` or suffixed `10KB`
        input_format:
          $ref: '#/components/schemas/NameTemplate'
        output_format:
          $ref: '#/components/schemas/NameTemplate'
        algorithm:
          type: object
          properties:
            kind:
              type: string
              enum: [alphanumeric, content, shuffle, none]
            decreasing:
              type: boolean
              default: false
            seed:
              type: string
              default: ""
              description: Seed provided to random generator, used for `kind=shuffle`
            extension:
              type: string
              default: ""
              description: Content of the file with provided extension will be used as sorting key
            format_type:
              type: string
              enum: [int, float, string]
              default: string
              description: Format type describes how the content of the file should be interpreted
        order_file:
          type: string
          example: https://google.com/file.txt
          description: URL to the file containing external key map (it should contains lines in format `record_key[sep]shard-%d-fmt`) 
        order_file_sep:
          type: string
          default: "\t"
          description: Separator used for splitting `record_key` and `shard-%d-fmt` in the lines in external key map
        max_mem_usage:
          type: string
          example: "10%"
          description: Limits the amount of total system memory allocated by both dSort and other running processes. Once and if this threshold is crossed, dSort will continue extracting onto local drives. Can be in format 60% or 10GB
        extract_concurrency_limit:
          type: integer
          minimum: 0
          default: 0
          example: 3
          description: Limits number of concurrent shards extracted per disk
        create_concurrency_limit:
          type: integer
          minimum: 0
          default: 0
          example: 3
          description: Limits number of concurrent shards created per disk
        extended_metrics:
          type: boolean
          description: Determines if metrics should include extened statistics
      required:
        - bucket
        - extension
        - input_format
        - output_format
    MapOfMetrics: # <---- dictionary
      type: object
      additionalProperties:
        type: object
        properties:
          local_extraction:
            type: object
            properties:
              started_time:
                type: string
                format: date-time
              end_time:
                type: string
                format: date-time
              elapsed:
                type: integer
                description: Time passed from start to given point of time or end (if the phase has finished)
                example: 50
              running:
                type: boolean
              finished:
                type: boolean
              total_count:
                type: integer
              extracted_count:
                type: integer
              extracted_size:
                type: integer
                format: int64
              extracted_record_count:
                type: integer
              extracted_to_disk_count:
                type: integer
              extracted_to_disk_size:
                type: integer
                format: int64
              single_shard_stats:
                $ref: '#/components/schemas/DetailedStats'
          meta_sorting:
            type: object
            properties:
              started_time:
                type: string
                format: date-time
              end_time:
                type: string
                format: date-time
              elapsed:
                type: integer
                description: Time passed from start to given point of time or end (if the phase has finished)
                example: 50
              running:
                type: boolean
              finished:
                type: boolean
              sent_stats:
                $ref: '#/components/schemas/TimeStats'
              recv_stats:
                $ref: '#/components/schemas/TimeStats'
          shard_creation:
            type: object
            properties:
              started_time:
                type: string
                format: date-time
              end_time:
                type: string
                format: date-time
              elapsed:
                type: integer
                description: Time passed from start to given point of time or end (if the phase has finished)
                example: 50
              running:
                type: boolean
              finished:
                type: boolean
              to_create:
                type: integer
              created_count:
                type: integer
              moved_shard_count:
                type: integer
              req_stats:
                $ref: '#/components/schemas/TimeStats'
              resp_stats:
                $ref: '#/components/schemas/TimeStats'
              local_send_stats:
                $ref: '#/components/schemas/DetailedStats'
              local_recv_stats:
                $ref: '#/components/schemas/DetailedStats'
              single_shard_stats:
                $ref: '#/components/schemas/DetailedStats'
          aborted:
            type: boolean
            description: Specifies if the distributed sort has been aborted or not.
    NameTemplate:
      type: string
      example: "prefix-{0001..0999}-suffix"
    TimeStats:
      type: object
      properties:
        total_ms:
          type: integer
        count:
          type: integer
        min_ms:
          type: integer
        max_ms:
          type: integer
        avg_ms:
          type: integer
    DetailedStats:
      type: object
      properties:
        total_ms:
          type: integer
        count:
          type: integer
        min_ms:
          type: integer
        max_ms:
          type: integer
        avg_ms:
          type: integer
        min_throughput:
          type: integer
        max_throughput:
          type: integer
        avg_throughput:
          type: integer
    InputParameters:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/Actions'
        name:
          type: string
        value:
          oneOf:
            - $ref: '#/components/schemas/ListParameters'
            - $ref: '#/components/schemas/RangeParameters'
            - $ref: '#/components/schemas/BucketProps'
            - $ref: '#/components/schemas/ObjectPropertiesRequestParams'
    Actions:
      type: string
      enum: [evictobjects, rename, createlb, destroylb, renamelb, evictcb, setprops, prefetch, delete, setconfig, shutdown, rebalance, listobjects, enable, disable, remove, add]
    ListParameters:
      properties:
        deadline:
          type: string
        wait:
          type: boolean
        objnames:
          type: array
          items:
            type: string
      required:
          - objnames
    RangeParameters:
      properties:
        deadline:
          type: string
        wait:
          type: boolean
        prefix:
          type: string
        regex:
          type: string
        range:
          type: string
      required:
        - regex
        - prefix
        - range
    BucketProps:
      properties:
        cloud_provider:
          type: string
        cksum:
          $ref: '#/components/schemas/BucketPropsCksum'
    BucketPropsCksum:
      type: object
      properties:
        type: 
          type: string
          enum: [xxhash, none, inherit]
          default: inherit
        validate_cold_get:
          type: boolean
        validate_warm_get:
          type: boolean
        enable_read_range:
          type: boolean
    BucketNames:
      type: object
      properties:
        cloud:
          type: array
          items:
            type: string
        ais:
          type: array
          items:
            type: string
    ObjectPropertiesRequestParams:
      type: object
      properties:
        props:
          type: string
        time_format:
          $ref: '#/components/schemas/TimeFormat'
        prefix:
          type: string
        pagemarker:
          type: string
        pagesize:
          type: string
        taskid:
          type: integer
          format: int64
    ObjectProperties:
      type: object
      properties:
        name:
          type: string
        size:
          type: integer
          format: int64
        checksum:
          type: string
        atime:
          type: string
        bucket:
          type: string
        version:
          type: string
        targetURL:
          type: string
        flags:
          type: integer
        copies:
          type: integer
    ObjectPropertyList:
      type: object
      properties:
        pagemarker:
          type: string
        entries:
          type: array
          items:
            $ref: '#/components/schemas/ObjectProperties'
    ObjectPropertyTypes:
      type: string
      enum: [size, checksum, atime, bucket, version, copies, flags, targetURL]
    TimeFormat:
      type: string
      enum: [ANSIC, UnixDate, RubyDate, RFC822, RFC822Z, RFC850, RFC1123, RFC1123Z, RFC3339, RFC3339Nano, Kitchen, Stamp, StampMilli, StampMicro, StampNano]
    CloudProvider:
      type: string
      enum: [ais, aws, gcp]
    Headers:
      type: string
      enum: [cloud_provider, Versioning, ObjVersion, ObjSize, ObjCksumType, ObjCksumVal]
    RWPolicy:
      type: string
      enum: [cloud]
    Version:
      type: string
      enum: [all, cloud, local, none]
    Snode:
      type: object
      properties:
        daemon_id:
          type: string
        deamon_type:
          type: string
          enum: [target, proxy]
        public_net:
          $ref: '#/components/schemas/NetInfo'
        intra_control_net:
          $ref: '#/components/schemas/NetInfo'
        intra_data_net:
          $ref: '#/components/schemas/NetInfo'
    NetInfo:
      type: object
      properties:
        node_ip_addr:
          type: string
        daemon_port:
          type: string
        direct_url:
          type: string
    GetWhat:
      type: string
      enum:
        - smap
        - bmd
        - smapvote
        - config
        - stats
        - xaction
        - mountpaths
        - snode
        - status
        - sysinfo
        - disk
    GetProps:
      type: string
      enum: [rebalance, prefetch]
    TaskID:
      type: integer
      format: int64
    ClusterMap:
      type: object
      properties:
        tmap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Snode'
        pmap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Snode'
        proxy_si:
          $ref: '#/components/schemas/Snode'
        version:
          type: integer
          format: int64
    DaemonCoreStatistics:
      type: object
      properties:
        get.n:
          type: integer
          format: int64
        put.n:
          type: integer
          format: int64
        append.n:
          type: integer
          format: int64
        pst.n:
          type: integer
          format: int64
        del.n:
          type: integer
          format: int64
        ren.n:
          type: integer
          format: int64
        lst.n:
          type: integer
          format: int64
        get.µs:
          type: integer
          format: int64
        put.µs:
          type: integer
          format: int64
        lst.µs:
          type: integer
          format: int64
        err.n:
          type: integer
          format: int64
    TargetCoreStatistics:
      allOf:
        - $ref: '#/components/schemas/DaemonCoreStatistics'
        - type: object
          properties:
            get.n:
              type: integer
              format: int64
            put.n:
              type: integer
              format: int64
            append.n:
              type: integer
              format: int64
            pst.n:
              type: integer
              format: int64
            del.n:
              type: integer
              format: int64
            ren.n:
              type: integer
              format: int64
            lst.n:
              type: integer
              format: int64
            lru.evict.n:
              type: integer
              format: int64
            lru.evict.size:
              type: integer
              format: int64
            tx.reb.n:
              type: integer
              format: int64
            tx.reb.size:
              type: integer
              format: int64
            rx.reb.n:
              type: integer
              format: int64
            rx.reb.size:
              type: integer
              format: int64
            pre.n:
              type: integer
              format: int64
            pre.size:
              type: integer
              format: int64
            vchange.n:
              type: integer
              format: int64
            vchange.size:
              type: integer
              format: int64
            get.µs:
              type: integer
              format: int64
            put.µs:
              type: integer
              format: int64
            lst.µs:
              type: integer
              format: int64
            err.n:
              type: integer
              format: int64
            err.get.n:
              type: integer
              format: int64
            err.delete.n:
              type: integer
              format: int64
            err.post.n:
              type: integer
              format: int64
            err.put.n:
              type: integer
              format: int64
            err.head.n:
              type: integer
              format: int64
            err.list.n:
              type: integer
              format: int64
            err.range.n:
              type: integer
              format: int64
            err.dl.n:
              type: integer
              format: int64
            up.µs.time:
              type: integer
              format: int64
            err.cksum.n:
              type: integer
              format: int64
            err.cksum.size:
              type: integer
              format: int64
            err.md.n:
              type: integer
              format: int64
            err.md.size:
              type: integer
              format: int64
            err.io.n:
              type: integer
              format: int64
    FileSystemCapacity:
      type: object
      properties:
        used:
          type: integer
          format: int64
        avail:
          type: integer
          format: int64
        usedpct:
          type: integer
          format: int32
    TargetStatistics:
      type: object
      properties:
        core:
          $ref: '#/components/schemas/TargetCoreStatistics'
        capacity:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FileSystemCapacity'
        cpuidle:
          type: string
        disk:
          type: object
          additionalProperties:
            type: string
    ClusterStatistics:
      type: object
      properties:
        proxy:
          $ref: '#/components/schemas/DaemonCoreStatistics'
        target:
          $ref: '#/components/schemas/TargetStatistics'
    SysInfoStats:
      type: object
      properties:
        proxy:
          type: object
          additionalProperties:
            type: object
            properties:
              mem_used:
                type: integer
              mem_avail:
                type: integer
              pct_mem_used:
                type: number
                format: float
              pct_cpu_used:
                type: number
                format: float
        target:
          type: object
          additionalProperties:
            type: object
            properties:
              mem_used:
                type: integer
              mem_avail:
                type: integer
              pct_mem_used:
                type: number
                format: float
              pct_cpu_used:
                type: number
                format: float
              fs_used:
                type: string
              fs_capacity:
                type: string
              pct_fs_used:
                type: number
                format: float
    ProxyConfiguration:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
        passthru:
          type: boolean
    KeepAliveTrackerConfiguration:
      type: object
      properties:
        interval:
          type: string
        name:
          type: string
        factor:
          type: integer
          format: int32
    DaemonConfiguration:
      type: object
      properties:
        confdir:
          type: string
        cloud:
          type: object
        ec:
          type: object
          properties:
            objsize_limit:
              type: integer
            data_slices:
              type: integer
            parity_slices:
              type: integer
            compression:
              type: string
              enum: [never, always]
            enabled:
              type: boolean
        mirror:
          type: object
          properties:
            copies:
              type: integer
            burst_buffer:
              type: integer
            util_thresh:
              type: integer
            optimize_put:
              type: boolean
            enabled:
              type: boolean
        log:
          type: object
          properties:
            dir:
              type: string
            level:
              type: string
            max_size:
              type: integer
              format: int64
            max_total:
              type: integer
              format: int64
        periodic:
          type: object
          properties:
            stats_time:
              type: string
            retry_sync_time:
              type: string
        timeout:
          type: object
          properties:
            default_timeout:
              type: string
            default_long_timeout:
              type: string
            max_keepalive:
              type: string
            proxy_ping:
              type: string
            cplane_operation:
              type: string
            send_file_time:
              type: string
            startup_time:
              type: string
            list_timeout:
              type: string
        proxy:
          type: object
          properties:
            non_electable:
              type: boolean
            primary_url:
              type: string
            original_url:
              type: string
            discovery_url:
              type: string
        lru:
          type: object
          properties:
            lowwm:
              type: integer
              format: int32
            highwm:
              type: integer
              format: int32
            out_of_space:
              type: integer
              format: int32
            dont_evict_time:
              type: string
            capacity_upd_time:
              type: string
            enabled:
              type: boolean
        disk:
          type: object
          properties:
            iostat_time_long:
              type: string
            iostat_time_short:
              type: string
            disk_util_low_wm:
              type: integer
            disk_util_high_wm:
              type: integer
            disk_util_max_wm:
                type: integer
        rebalance:
          type: object
          properties:
            dest_retry_time:
              type: string
            quiescent:
              type: string
            compression:
              type: string
              enum: [never, always]
            multiplier:
              type: integer
            enabled:
              type: boolean
        cksum:
          type: object
          properties:
            type:
              type: string
            validate_cold_get:
              type: boolean
            validate_warm_get:
              type: boolean
            validate_cluster_migration:
              type: boolean
            enable_read_range:
              type: boolean
        version:
          type: object
          properties:
            enabled:
              type: boolean
            validate_warm_get:
              type: boolean
        fspaths:
          type: object
          additionalProperties:
            type: string
        test_fspaths:
          type: object
          properties:
            root:
              type: string
            count:
              type: integer
              format: int32
            instance:
              type: integer
              format: int32
        net:
          type: object
          properties:
            ipv4:
              type: string
            ipv4_intra_control:
              type: string
            ipv4_intra_data:
              type: string
            l4:
              type: object
              properties:
                proto:
                  type: string
                port:
                    type: string
                port_intra_control:
                    type: string
                port_intra_data:
                    type: string
            http:
              type: object
              properties:
                use_https:
                  type: boolean
                proto:
                  type: string
                rproxy:
                  type: string
                rproxy_cache:
                  type: boolean
                server_certificate:
                  type: string
                server_key:
                  type: string
                chunked_transfer:
                  type: boolean
        fshc:
          type: object
          properties:
            enabled:
              type: boolean
            test_files:
              type: integer
            error_limit:
              type: integer
        auth:
          type: object
          properties:
            secret:
              type: string
            enabled:
              type: boolean
            creddir:
              type: string
        keepalivetracker:
          type: object
          properties:
            proxy:
              $ref: '#/components/schemas/KeepAliveTrackerConfiguration'
            target:
              $ref: '#/components/schemas/KeepAliveTrackerConfiguration'
            retry_factor:
              type: integer
            timeout_factor:
              type: integer
        downloader:
          type: object
          properties:
            timeout:
              type: string
        compression:
          type: object
          properties:
            block_size:
              type: integer
            checksum:
              type: boolean
        distributed_sort:
          type: object
          properties:
            duplicated_records:
              type: string
            missing_shards:
              type: string
            ekm_malformed_line:
              type: string
            ekm_missing_key:
              type: string
            default_max_mem_usage:
              type: string
            dsorter_mem_threshold:
              type: string
            call_timeout:
              type: string
    BaseXactStats:
      type: object
      properties:
        id:
          type: string
        kind:
          type: string
        bucket:
          type: string
        provider:
          type: string
        start_time:
          type: string
        end_time:
          type: string
        obj_count:
          type: integer
          format: int64
        bytes_count:
          type: integer
          format: int64
        aborted:
          type: boolean
    RebalanceTargetStatistics:
      type: object
      properties:
        xactionDetails:
          type: array
          items:
            $ref: '#/components/schemas/BaseXactStats'
        tx.reb.n:
          type: integer
          format: int64
        tx.reb.size:
          type: integer
          format: int64
        rx.reb.n:
          type: integer
          format: int64
        rx.reb.size:
          type: integer
          format: int64
        reb.glob.id:
          type: integer
          format: int64
