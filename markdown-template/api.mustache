# {{classname}}{{#description}}
    {{.}}{{/description}}

All URIs are relative to *{{basePath}}*

| Method | HTTP request | Description |
|------------- | ------------- | -------------|
{{#operations}}{{#operation}}| [**{{operationId}}**]({{classname}}.md#{{operationId}}) | **{{httpMethod}}** {{path}} | {{summary}} |
{{/operation}}{{/operations}}

{{#operations}}
{{#operation}}
<a name="{{operationId}}"></a>
# **{{operationId}}**
> {{#returnType}}{{.}} {{/returnType}}{{operationId}}({{#allParams}}{{{paramName}}}{{^-last}}, {{/-last}}{{/allParams}})

{{summary}}{{#notes}}

    {{.}}{{/notes}}

{{#allParams}}{{#isBodyParam}}
{{#description}}
<div class="supported-actions">
    <p>{{{.}}}</p>
    <script>
    (function() {
        var container = document.currentScript.previousElementSibling;
        var text = container.innerHTML;
        if (text.indexOf('Supported actions:') !== -1) {
            // Extract mappings from HTML comment
            var mappingsMatch = text.match(/<!-- mappings: ([^-]+) -->/);
            if (mappingsMatch) {
                var mappingsStr = mappingsMatch[1];
                var mappings = {};
                mappingsStr.split(', ').forEach(function(mapping) {
                    var parts = mapping.split(':');
                    if (parts.length === 2) {
                        mappings[parts[0]] = parts[1];
                    }
                });
                
                // Replace action names with links using the correct models
                text = text.replace(/Supported actions:\s*([^<]+)<!-- mappings[^>]*-->/, function(match, actions) {
                    var linkedActions = actions.split(',').map(function(action) {
                        var trimmed = action.trim();
                        var model = mappings[trimmed];
                        if (model) {
                            return '<a href="../Models/' + model + '.html">' + trimmed + '</a>';
                        }
                        return trimmed;
                    }).join(', ');
                    return 'Supported actions: ' + linkedActions;
                });
            }
            container.innerHTML = text;
        }
    })();
    </script>
</div>
{{/description}}
{{^description}}
<p>No description available</p>
{{/description}}

{{/isBodyParam}}{{/allParams}}

### Parameters
{{#allParams}}{{^isBodyParam}}{{#-first}}
|Name | Type | Description  | Notes |
|------------- | ------------- | ------------- | -------------|{{/-first}}{{/isBodyParam}}{{/allParams}}
{{#allParams}}{{^isBodyParam}}| **{{paramName}}** | {{#isPrimitiveType}}**{{dataType}}**{{/isPrimitiveType}}{{^isPrimitiveType}}{{#isFile}}**{{dataType}}**{{/isFile}}{{^isFile}}{{#generateModelDocs}}[**{{dataType}}**](../{{modelPackage}}/{{baseType}}.md){{/generateModelDocs}}{{^generateModelDocs}}**{{dataType}}**{{/generateModelDocs}}{{/isFile}}{{/isPrimitiveType}}| {{description}} |{{^required}} [optional]{{/required}}{{#defaultValue}} [default to {{.}}]{{/defaultValue}}{{#allowableValues}} [enum: {{#values}}{{{.}}}{{^-last}}, {{/-last}}{{/values}}]{{/allowableValues}} |
{{/isBodyParam}}{{/allParams}}

### Return type

{{#returnType}}{{#returnTypeIsPrimitive}}**{{returnType}}**{{/returnTypeIsPrimitive}}{{^returnTypeIsPrimitive}}{{#generateModelDocs}}[**{{returnType}}**](../{{modelPackage}}/{{returnBaseType}}.md){{/generateModelDocs}}{{^generateModelDocs}}**{{returnType}}**{{/generateModelDocs}}{{/returnTypeIsPrimitive}}{{/returnType}}{{^returnType}}null (empty response body){{/returnType}}

### Authorization

{{^authMethods}}No authorization required{{/authMethods}}{{#authMethods}}[{{name}}](../README.md#{{name}}){{^-last}}, {{/-last}}{{/authMethods}}

### HTTP request headers

- **Content-Type**: {{#consumes}}{{{mediaType}}}{{^-last}}, {{/-last}}{{/consumes}}{{^consumes}}Not defined{{/consumes}}
- **Accept**: {{#produces}}{{{mediaType}}}{{^-last}}, {{/-last}}{{/produces}}{{^produces}}Not defined{{/produces}}

{{/operation}}
{{/operations}}
